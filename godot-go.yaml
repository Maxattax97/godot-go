GENERATOR:
  PackageName: pkg/gdnative
  PackageDescription: ""
  PackageLicense: ""
  PkgConfigOpts: []
  Includes:
    - "gdnative.gen.h"
    - "nativescript.gen.h"
    - "cgo_gateway_class.h"
  SysIncludes:
    - "gdnative_api_struct.gen.h"
  Options:
    SafeStrings: true
    StructAccessors: false
  FlagGroups:
    - {name: "CFLAGS", traits: ["linux"], flags: [-g, -O3, -fPIC, -std=c99, "-I${SRCDIR}/../../pkg/gdnative", "-I${SRCDIR}/../../godot_headers"]}

PARSER:
  IncludePaths: ["godot_headers", "pkg/gdnative"]
  SourcesPaths: ["gdnative_api_struct.gen.h", "gdnative.gen.h", "nativescript.gen.h", "cgo_gateway_class.h"]

TRANSLATOR:
  ConstRules:
    defines: eval
    enum: eval
  Rules:
    function:
      - {action: accept, from: "^go_godot_"}
      - {action: accept, from: "^go_godot_get_class_constructor_new$"}
      - {action: ignore, from: "^go_godot_get_class_constructor$"} # c-for-go cannot property generate
#      - {action: ignore, from: "^go_godot_pool_byte_array_read_access_ptr$"} # c-for-go improper return type
#      - {action: ignore, from: "^go_godot_register_native_call_type$"}
      - {transform: export}
    type:
      - {action: accept, from: "^godot_gdnative_ext_"}
      - {action: accept, from: "^godot_property_hint$"}
      - {action: accept, from: "^godot_property_usage_flags$"}
      - {action: accept, from: "^godot_gdnative(_[a-z0-9]+)*_api_struct$"}
      - {action: ignore, from: "^godot_class_constructor$"}
      - {action: accept, from: "^godot_color$"}
      - {action: accept, from: "^godot_dictionary$"}
      - {action: accept, from: "^godot_object$" }
      - {action: accept, from: "^godot_method_attributes$" }
      - {action: accept, from: "^godot_instance_method$" }
      - {action: accept, from: "^godot_property_attributes$" }
      - {action: accept, from: "^godot_property_set_func$" }
      - {action: accept, from: "^godot_property_get_func$" }
      - {action: accept, from: "^godot_signal$" }
      - {action: accept, from: "^godot_quat$"}
      - {action: accept, from: "^godot_basis$"}
      - {action: accept, from: "^godot_array$"}
      - {action: accept, from: "^godot_pool_byte_array$"}
      - {action: accept, from: "^godot_pool_byte_array_read_access$"}
      - {action: accept, from: "^godot_pool_byte_array_write_access$"}
      - {action: accept, from: "^godot_pool_int_array$"}
      - {action: accept, from: "^godot_pool_int_array_read_access$"}
      - {action: accept, from: "^godot_pool_int_array_write_access$"}
      - {action: accept, from: "^godot_pool_real_array$"}
      - {action: accept, from: "^godot_pool_real_array_read_access$"}
      - {action: accept, from: "^godot_pool_real_array_write_access$"}
      - {action: accept, from: "^godot_pool_color_array$"}
      - {action: accept, from: "^godot_pool_string_array$"}
      - {action: accept, from: "^godot_pool_string_array_read_access$"}
      - {action: accept, from: "^godot_pool_string_array_write_access$"}
      - {action: accept, from: "^godot_pool_vector2_array$"}
      - {action: accept, from: "^godot_pool_vector2_array_read_access$"}
      - {action: accept, from: "^godot_pool_vector2_array_write_access$"}
      - {action: accept, from: "^godot_pool_vector3_array$"}
      - {action: accept, from: "^godot_pool_vector3_array_read_access$"}
      - {action: accept, from: "^godot_pool_vector3_array_write_access$"}
      - {action: accept, from: "^godot_pool_color_array$"}
      - {action: accept, from: "^godot_pool_color_array_read_access$"}
      - {action: accept, from: "^godot_pool_color_array_write_access$"}
      - {action: accept, from: "^godot_variant_call_error$"}
      - {action: accept, from: "^godot_method_bind$"}
      - {action: accept, from: "^godot_method_bind_get_method$"}
      - {action: accept, from: "^native_call_cb$"}
      - {action: accept, from: "^godot_vector3_axis$"}
      - {action: accept, from: "^godot_variant$"}
      - {action: accept, from: "^godot_variant_type$"}
      - {action: accept, from: "^godot_error$"}
      - {action: accept, from: "^godot_node_path$"}
      - {action: accept, from: "^godot_plane$"}
      - {action: accept, from: "^godot_rect2$"}
      - {action: accept, from: "^godot_vector2$"}
      - {action: accept, from: "^godot_vector3$"}
      - {action: accept, from: "^godot_vector3_axis$"}
      - {action: accept, from: "^godot_aabb$"}
      - {action: accept, from: "^godot_rid$"}
      - {action: accept, from: "^godot_transform$"}
      - {action: accept, from: "^godot_transform2d$"}
      - {action: accept, from: "^godot_animation_player$"}
      - {action: accept, from: "^godot_kinematic_body2d$"}
      - {action: accept, from: "^godot_variant_operator$"}
      - {action: accept, from: "^godot_method_rpc_mode$"}
      - {action: accept, from: "^godot_gdnative_init_options$"}
      - {action: accept, from: "^godot_gdnative_terminate_options$"}
      - {action: accept, from: "^godot_instance_create_func$"}
      - {action: accept, from: "^godot_instance_destroy_func$"}
      - {action: accept, from: "^godot_variant_type$"}
      - {action: accept, from: "^godot_method_arg$"}
      - {action: accept, from: "^godot_instance_binding_functions$"}

      # primatives
      - {action: replace, from: "^uint8_t$", to: "uint8"}
      - {action: replace, from: "^uint16_t$", to: "uint16"}
      - {action: replace, from: "^uint32_t$", to: "uint32"}
      - {action: replace, from: "^uint64_t$", to: "uint64"}
      - {action: replace, from: "^int8_t$", to: "int8"}
      - {action: replace, from: "^int16_t$", to: "int16"}
      - {action: replace, from: "^int32_t$", to: "int32"}
      - {action: replace, from: "^int64_t$", to: "int64"}
      - {action: replace, from: "^godot_int$", to: "int32"}
      - {action: replace, from: "^godot_bool$", to: "bool"}
      - {action: replace, from: "^godot_real$", to: "float32"}

      # string based types
      # - {action: accept, from: "^godot_char_string$"}
      # - {action: accept, from: "^godot_string$"}
      # - {action: accept, from: "^godot_string_name$"}

      # apply transformations
      - {action: replace, from: "^godot_"}
      - {transform: export}
      - {load: snakecase}

      - {action: replace, from: "^wchar_t$", to: "wchar.Wchar"}
      - {action: replace, from: "^Transform2d$", to: "Transform2D"}
      - {action: replace, from: "^KinematicBody2d$", to: "KinematicBody2D"}
      - {action: replace, from: "^Aabb$", to: "AABB"}
      - {action: replace, from: "^Rid$", to: "RID"}

    const:
      - {action: accept, from: "^GODOT_"}
      - {action: accept, from: "^GDNATIVE_"}

    private:
      - {transform: unexport}
#  PtrTips:
#    types:
#      - {target: "^NativeCallCb$", self: plain, tips: [sref, sref]}
  MemTips:
    - {target: godot_variant, self: plain}
    - {target: godot_object, self: plain}
    - {target: godot_string, self: raw}
    - {target: godot_string_name, self: raw}
    - {target: godot_char_string, self: raw}
    - {target: godot_gdnative_init_options, self: raw}
    - {target: godot_gdnative_terminate_options, self: raw}
    - {target: "^godot_gdnative(_[a-z0-9]+)*_api_struct$", self: raw}
    - {target: godot_instance_binding_functions, self: raw}
    - {target: godot_instance_create_func, self: raw}
    - {target: godot_instance_destroy_func, self: raw}
    - {target: godot_instance_method, self: raw}
    - {target: godot_property_set_func, self: raw}
    - {target: godot_property_get_func, self: raw}
#    - {target: godot_class_constructor, self: raw}
#    - {target: godot_method_bind, self: raw}

  TypeTips:
    function:
      - {target: "^go_godot_method_bind_get_method$", self: plain, tips: [ref, ref, ref]}
      - {target: "^go_godot_pool_byte_array_read_access_ptr$", self: plain, tips: [ref, ref]}
      - {target: "^go_godot_method_bind_ptrcall$", self: plain, tips: [ref, ref, ref, arr, ref]}
      # - {target: "^go_godot_global_get_singleton$", self: plain, tips: [ref, ref]}
      - {target: "^go_godot_get_class_constructor_new$", self: plain, tips: [ref, ref]}
      - {target: ., self: plain, tips: [ref, ref, ref, ref, ref, ref, ref]}
